MODULE ExpenseDop;

REQUIRE Expense, MoveMoneyOprerationDop;

NAMESPACE Expense;

analytics 'Аналитика' = DATA Analytics (Expense);
nameAnalytics 'Аналитика' = name(analytics(Expense p)) CHARWIDTH 7;
codeAnalytics 'Код аналитики' = code(analytics(Expense p)) CHARWIDTH 3;

onChangeAnalitics (Expense p) {
    LOCAL mmoper = MoveMoneyOpreration ();
    mmoper() <- GROUP MAX (MoveMoneyOpreration s) IF code(s) = nameType(p);

    IF typeAnalytics(mmoper()) THEN isReadOnly() <- TRUE;
    filterTypeAnalytics() <- typeAnalytics(mmoper());
    DIALOG listAnalytics OBJECTS a INPUT DO analytics(p) <- a;
    filterTypeAnalytics() <- NULL;
    isReadOnly() <- NULL;
}

EXTEND FORM expense
    PROPERTIES(o) nameAnalytics ON CHANGE onChangeAnalitics(o)
;

EXTEND FORM expenses
    PROPERTIES(o) READONLY codeAnalytics, nameAnalytics
;

operation(Expense p) = GROUP MAX (MoveMoneyOpreration s) IF code(s) = nameType(p);
//operation(ExpenseType t) = GROUP MAX (MoveMoneyOpreration s) IF code(s) = name(t);
//
//EXTEND FORM expenseTypes
//    FILTERS active(operation(o))
//;

inactive 'Неактивный' = DATA BOOLEAN (ExpenseType);
active 'Активный' (ExpenseType t) = NOT inactive(t);
EXTEND FORM expenseTypes
    PROPERTIES(o) inactive
    FILTERGROUP activegroup FILTER 'Активные' active(o) DEFAULT
        FILTER 'Неактивные' inactive(o)
;

countExpenseType 'Кол-во записей' (ExpenseType t) = GROUP SUM 1 BY type(Expense p);
EXTEND FORM expenseTypes
    PROPERTIES(o) countExpenseType
;
