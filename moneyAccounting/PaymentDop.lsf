MODULE PaymentDop;

REQUIRE Payment, MoveMoneyOprerationDop, LegalEntityDop;

NAMESPACE Payment;

analytics 'Аналитика' = DATA Analytics (Payment);
nameAnalytics 'Аналитика' = name(analytics(Payment p)) CHARWIDTH 7;
codeAnalytics 'Код аналитики' = code(analytics(Payment p)) CHARWIDTH 3;

onChangeAnalitics (Payment p) {
    LOCAL mmoper = MoveMoneyOpreration ();
    mmoper() <- GROUP MAX (MoveMoneyOpreration s) IF code(s) = nameType(p);

    IF typeAnalytics(mmoper()) THEN isReadOnly() <- TRUE;
    filterTypeAnalytics() <- typeAnalytics(mmoper());
    DIALOG listAnalytics OBJECTS a INPUT DO analytics(p) <- a;
    filterTypeAnalytics() <- NULL;
    isReadOnly() <- NULL;
}

EXTEND FORM payment
    PROPERTIES(o) nameAnalytics ON CHANGE onChangeAnalitics(o)
;
DESIGN payment {
    OBJECTS {
        main {
            MOVE PROPERTY (nameAnalytics(o)) {charWidth=80;};
        }
    }
}

EXTEND FORM payments
    PROPERTIES(o) READONLY codeAnalytics, nameAnalytics
;

operation(Payment p) = GROUP MAX (MoveMoneyOpreration s) IF code(s) = nameType(p);

inactive 'Неактивный' = DATA BOOLEAN (PaymentType);
active 'Активный' (PaymentType t) = NOT inactive(t);

EXTEND FORM paymentTypes
    PROPERTIES(o) READONLY inactive
    FILTERGROUP activegroup FILTER 'Активные' active(o) DEFAULT
                            FILTER 'Неактивные' inactive(o)
;

EXTEND FORM paymentType
    PROPERTIES(o) inactive
;

EXTEND FORM payment
    EVENTS ON INIT {
        IF NOT date(o) AND NOT currency(o) THEN {
            date(o) <- currentDate();
            IF isCompanyLuxSoft() THEN
                currency(o) <- GROUP MAX Currency c IF shortName(c) = 'BYN';
            IF isCompanyFit() THEN
                currency(o) <- GROUP MAX Currency c IF shortName(c) = 'RUB';
        }    
    }
;

WHEN LOCAL FORMS payment SETCHANGED(type(Payment p)) OR DROPPED(type(p)) DO {
    analytics(p) <- NULL ;
}

