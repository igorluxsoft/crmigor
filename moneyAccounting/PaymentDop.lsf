MODULE PaymentDop;

REQUIRE Payment, MoveMoneyOprerationDop;

NAMESPACE Payment;

analytics 'Аналитика' = DATA Analytics (Payment);
nameAnalytics 'Аналитика' = name(analytics(Payment p)) CHARWIDTH 7;
codeAnalytics 'Код аналитики' = code(analytics(Payment p)) CHARWIDTH 3;

onChangeAnalitics (Payment p) {
    LOCAL mmoper = MoveMoneyOpreration ();
    mmoper() <- GROUP MAX (MoveMoneyOpreration s) IF code(s) = nameType(p);

    IF typeAnalytics(mmoper()) THEN isReadOnly() <- TRUE;
    filterTypeAnalytics() <- typeAnalytics(mmoper());
    DIALOG listAnalytics OBJECTS a INPUT DO analytics(p) <- a;
    filterTypeAnalytics() <- NULL;
    isReadOnly() <- NULL;
}

EXTEND FORM payment
    PROPERTIES(o) nameAnalytics ON CHANGE onChangeAnalitics(o)
;
DESIGN payment {
    OBJECTS {
        main {
            MOVE PROPERTY (nameAnalytics(o)) {charWidth=80;};
        }
    }
}

EXTEND FORM payments
    PROPERTIES(o) READONLY codeAnalytics, nameAnalytics
;

operation(Payment p) = GROUP MAX (MoveMoneyOpreration s) IF code(s) = nameType(p);
//operation(PaymentType t) = GROUP MAX (MoveMoneyOpreration s) IF code(s) = name(t);
//
//EXTEND FORM paymentTypes
//    FILTERS active(operation(o))
//;

inactive 'Неактивный' = DATA BOOLEAN (PaymentType);
active 'Активный' (PaymentType t) = NOT inactive(t);
EXTEND FORM paymentTypes
    PROPERTIES(o) inactive
    FILTERGROUP activegroup FILTER 'Активные' active(o) DEFAULT
                            FILTER 'Неактивные' inactive(o)
;

countPaymentType 'Кол-во записей' (PaymentType t) = GROUP SUM 1 BY type(Payment p);
EXTEND FORM paymentTypes
    PROPERTIES(o) countPaymentType
;
